

void enter(char comand[MAX_COMAND]){

    char plate[MAX_PLATE];
    int valid = 1;
    int len_comand = strlen(comand);
    int num_vehicles = 0;

    do{

        if(valid == 0){
            printf("\n\nParking LS> ");
            fgets(comand, MAX_COMAND, stdin);
            fix_str(comand);   
            len_comand = strlen(comand);     
        }
        
        if((comand[0] == 'e' && comand[1] == 'n' && comand[2] == 't' && comand[3] == 'e' && comand[4] == 'r') && (comand[5] == ' ' && (comand[6] == 'T' || comand[6] == 'C' || comand[6] == 'B') && comand[7] == ' ') 
        && (comand[8] >= '0' && comand[8] <= '9') && (comand[9] >= '0' && comand[9] <= '9') && (comand[10] >= '0' && comand[10] <= '9') && (comand[11] >= '0'  && comand[11] <= '9') 
        && (comand[12] >= 'A' && comand[12] <= 'Z')  && (comand[13] >= 'A' && comand[13] <= 'Z')  && (comand[14] >= 'A' && comand[14] <= 'Z') ){

            // MAtricula == commad[8] - commmand[14]
            // PISTA -> el maximo de coches q pueden entrar es 8




            // Hora
            switch (len_comand){
                                
                case 21:

                    if(comand[16] == '2'){

                        if((comand[17] >= '0' && comand[17] <= '4') && comand[18] == ':' && (comand[19] >= '0' && comand[19] <= '5') && (comand[20] >= 0 && comand[20] <= '9')){
                            valid = 1;
                        }else{
                            printf("(ERROR) Wrong time format\n");
                            valid = 0;
                        }
                    }

                    if(comand[16] == '1'){

                        if((comand[17] >= '0' && comand[17] <= '9') && comand[18] == ':' && (comand[19] >= '0' && comand[19] <= '5') && (comand[20] >= 0 && comand[20] <= '9')){
                            valid = 1;
                        }else{
                            printf("(ERROR) Wrong time format\n");
                            valid = 0;
                        }
                    
                    }

                    if(comand[16] != '1' && comand[16] != '2'){
                        printf("(ERROR) Wrong time format\n");
                        valid = 0;
                    }

                    break;
                            
                case 20:
                    
                    if((comand[16] >= '0' && comand[16] <= '9') && comand[17] == ':' && (comand[18] >= '0' && comand[18] <= '5') && (comand[19] >= 0 && comand[19] <= '9')){
                        valid = 1;
                    }else{
                        printf("(ERROR) Wrong time format\n");
                        valid = 0;
                    }

                    break;

                default:
                    printf("(ERROR) Wrong command\n");
                    valid = 0;
                    
                    break;
            }

        }else{
            printf("(ERROR) Wrong command\n");
            valid = 0;
        }


    }while(valid == 0);

    num_vehicles++;

    if (num_vehicles > MAX_VEHICLES){
        printf("(ERROR) No more vehicles are accepted");
        num_vehicles = MAX_VEHICLES;  // NS PQ
    }

}
